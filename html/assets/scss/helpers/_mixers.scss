//--------
// Mixers
//
// Includes commonly used and useful mixins

// ------------
// Breakpoints
// usage: @include for-desktop-up { [insert styles here] }

@mixin for-phone-only {
  @media (max-width: 480px) { @content; }
}

@mixin narrow {
  @media (max-width: 850px) { @content; }
}

@mixin wide {
  @media (min-width: 850px) { @content; }
}

//--------
// Toggle element visibility
// When invisible element is still available for screenreaders.
//
// @switch        Modifier strings: 'hide'/'show'
@mixin elm-toggle($switch) {

  @if ($switch == 'hide') {
    border: 0;
    clip: rect(0 0 0 0);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
  } @else if ($switch == 'show') {
    clip: auto;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static !important;
    width: auto;
  }
}


//--------
// Clearfix element
// The tried and true clearfix hack allows us to contain floats without resorting to presentational markup.
@mixin clearfix() {
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

//--------
// Vendor prefixing
// Useful for newer CSS3 properties to increase compatibility
//
// @property        A CSS3 property
// @value           The value to be set on the property
@mixin css3($property, $value) {
  @each $prefix in -webkit-, -moz-, -ms-, -o-, '' {
    #{$prefix}#{$property}: $value;
  }
}

//--------
// Text overflow
// Truncate text with an ellipsis. Can be used on block or inline-block elements only.
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}


//--------
// Gradient border
// Creates a border with a gradient
// Usage: @include border-gradient('top-bottom', 0 1px 0 0, solid, $default-border-color, $default-gradient-border-color);
//
// @mod         Direction of gradient ('top-bottom' or 'left-right')
// @width       Border width
// @style       Border style
// @color1      Starting color
// @color2      Ending color

@mixin border-gradient($mod, $width, $style, $color1: black, $color2: rgba(0, 0, 0, 0)) {
  border-width: $width;
  border-style: $style;

  @if ($mod == 'top-bottom') {
    -webkit-border-image:
    -webkit-gradient(linear, 0 100%, 0 0, from($color1), to($color2)) 1 100%;
    -webkit-border-image:
    -webkit-linear-gradient(bottom, $color1, $color2) 1 100%;
    -moz-border-image:
    -moz-linear-gradient(bottom, $color1, $color2) 1 100%;
    -o-border-image:
    -o-linear-gradient(bottom, $color1, $color2) 1 100%;
    border-image:
    linear-gradient(to top, $color1, $color2) 1 100%;
  } @else if ($mod == 'left-right') {
    -webkit-border-image:
    -webkit-gradient(linear, 0 100%, 0 0, from($color1), to($color2)) 1 100%;
    -webkit-border-image:
    -webkit-linear-gradient(right, $color1, $color2) 1 100%;
    -moz-border-image:
    -moz-linear-gradient(right, $color1, $color2) 1 100%;
    -o-border-image:
    -o-linear-gradient(right, $color1, $color2) 1 100%;
    border-image:
    linear-gradient(to right, $color1, $color2) 1 100%;
  }
}
